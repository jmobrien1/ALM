name: Deploy to GoDaddy (FTPS, minimal-stable)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    # Read creds from repo secrets. (Set FTP_DIR in secrets if your docroot isn't public_html.)
    env:
      FTP_SERVER:   ${{ secrets.FTP_SERVER }}
      FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
      FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      FTP_DIR:      ${{ secrets.FTP_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare artifact
        run: |
          set -e
          rm -rf out
          mkdir -p out
          rsync -av --delete \
            --exclude ".git" \
            --exclude ".github" \
            --exclude "out" \
            --exclude "*.bak.*" \
            --exclude ".DS_Store" \
            ./ ./out/
          # marker used for post-deploy verification
          echo "${GITHUB_SHA}" > out/deploy-check.txt
          # ensure /marketplace/ directory index exists
          mkdir -p out/marketplace
          [ -f out/marketplace.html ] && cp -f out/marketplace.html out/marketplace/index.html || true

      - name: Install lftp & curl
        run: sudo apt-get update && sudo apt-get install -y lftp curl

      - name: Upload via FTPS (mirror)
        run: |
          set -e
          DEST_DIR="${FTP_DIR:-public_html}"
          lftp -u "$FTP_USERNAME","$FTP_PASSWORD" "$FTP_SERVER" -e "
            set net:max-retries 5
            set net:persist-retries 3
            set net:timeout 45
            set net:reconnect-interval-base 5
            set net:reconnect-interval-max 60
            set ftp:passive-mode true
            set ftp:ssl-force true
            set ftp:ssl-protect-data true
            set ssl:verify-certificate false
            mkdir -p $DEST_DIR
            cd $DEST_DIR
            mirror -R --ignore-time --delete --verbose=2 out/ ./
            bye
          "

      - name: Verify deploy (deploy-check.txt)
        run: |
          set -e
          url="https://www.allegiancelistmarketing.com/deploy-check.txt?v=$(date +%s)"
          live_sha="$(curl -fsS "$url" || true)"
          echo "remote: $live_sha"
          echo "local : $GITHUB_SHA"
          test "$live_sha" = "$GITHUB_SHA"
