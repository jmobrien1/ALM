name: Deploy to GoDaddy (FTPS)
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Prepare artifact
        run: |
          rm -rf out
          mkdir out
          rsync -av --delete \
            --exclude ".git" \
            --exclude ".github" \
            --exclude "out" \
            --exclude "*.bak.*" \
            --exclude ".DS_Store" \
            ./ ./out/

      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp curl

      - name: Upload via FTPS (explicit TLS) with retries
        env:
          FTP_SERVER:   ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          FTP_DIR:      ${{ secrets.FTP_DIR }}
        run: |
          set -e
          : "${FTP_DIR:=public_html}"
          lftp -u "$FTP_USERNAME","$FTP_PASSWORD" "$FTP_SERVER" -e "\
            set net:max-retries 5; set net:persist-retries 3; set net:timeout 30; \
            set net:reconnect-interval-base 5; set net:reconnect-interval-max 60; \
            set ftp:passive-mode true; set ftp:ssl-force true; set ftp:ssl-protect-data true; \
            set xfer:clobber on; set ssl:verify-certificate false; \
            mkdir -p $FTP_DIR; cd $FTP_DIR; \
            mirror -R --ignore-time --delete --verbose=2 out/ ./; \
            mkdir -p marketplace; put -O marketplace out/marketplace.html -o index.html; \
            bye"

      - name: Verify LIVE marketplace and JSON
        run: |
          set -e
          curl -fsS "https://www.allegiancelistmarketing.com/marketplace.html?v=$(date +%s)" | grep -q 'dynamic-market' && echo "OK: marketplace.html"
          curl -fsS "https://www.allegiancelistmarketing.com/marketplace/?v=$(date +%s)"  | grep -q 'dynamic-market' && echo "OK: /marketplace/"
          H1=$(curl -fsS "https://www.allegiancelistmarketing.com/assets/data/datacards.json?v=$(date +%s)" | head -c1 || true)
          if [ "$H1" != "[" ] && [ "$H1" != "{" ]; then echo "ERROR: JSON missing"; exit 1; fi
